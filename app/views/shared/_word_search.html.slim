.word_search_result
  = link_to '画像検索', pixabay_path(word: @word), method: :post, remote: true
  - @dictionary_data.each_with_index do |container, container_index|
    / 4つ以上の関連のない語を省く
    - if container.dig('meta', 'id') =~ Regexp.new(@word) || container_index < 3
      <p><strong>#{container.dig('meta', 'id')&.parse_tokens}</strong></p>
      - if container.dig('hwi', 'prs', 0, 'ipa')
        <p><span class='gray'>/#{container.dig('hwi', 'prs', 0, 'ipa')&.parse_tokens}/</span></p>
      - if container.dig('hwi', 'altprs', 0, 'ipa')
        <p><span class='gray'>/#{container.dig('hwi', 'altprs', 0, 'ipa')&.parse_tokens}/</span></p>
      - if (file_name = container.dig('hwi', 'prs', 0, 'sound', 'audio'))
        span
          audio.word-audio src='#{word_wav_url(file_name)}' preload='none'
          button.audio-button audio
      p.word-class= container.dig('fl')&.parse_tokens
      / 変形
      p class='ins_#{container_index}'
        - container.dig('ins')&.each_with_index do |ins, ins_index| 
          - if ins.dig('il')
            <span class='gray italic'>#{ins.dig('il')&.parse_tokens} </span>
            <strong>#{ins.dig('if')&.parse_tokens} </strong>
          - else
            <strong>#{ins.dig('if')&.parse_tokens} </strong>
          - if ins.dig('prs', 0, 'ipa')
            <span class='gray'>/#{ins.dig('prs', 0, 'ipa')&.parse_tokens}/ </span>
            - if ins_wav = ins.dig('prs', 0, 'sound', 'audio')
              span
                audio.word-audio src='#{word_wav_url(ins_wav)}' preload='none'
                button.audio-button audio
      / [count]など
      p class='gram_#{container_index}'
        - if container.dig('gram')
          <span>[<span class='gray'>#{container.dig('gram')&.parse_tokens}</span>]</span>
        i= container.dig('def', 0, 'sls')&.join(', ')&.parse_tokens
      - container.dig('def', 0, 'sseq')&.each_with_index do |sseq, sseq_index|
        - sseq.each_with_index do |child_sseq, child_sseq_index|
          p class='def_#{container_index}_#{sseq_index}_#{child_sseq_index}'
            strong #{child_sseq.dig(1, 'sn')&.parse_tokens}
            strong.italic #{child_sseq.dig(1, 'bnote')&.parse_tokens}
            / 1a[+ object]などの[]がある時の区別
            - if child_sseq.dig(1, 'sgram')
              <span>[<span class='gray'>#{child_sseq.dig(1, 'sgram')&.parse_tokens}</span>] </span>
            span.italic #{child_sseq.dig(1, 'sls')&.join(', ')&.parse_tokens}
            - child_sseq.dig(1, 'dt')&.each_with_index do |dt, dt_index|
              / 1a : などの小見出し
              - if dt_index == 0 && dt.dig(0) == 'text'
                span= dt.dig(1)&.parse_tokens
              / 見出しがunsの場合
              - elsif dt_index == 0 && dt.dig(0) == 'uns'
                <span>—#{dt.dig(1, 0, 0, 1)&.parse_tokens}</span>
